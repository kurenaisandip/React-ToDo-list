import { useState } from "react"
import "./style.css"

export default function App() {
  const [newItem, setNewItem] = useState("")  
  const [todos, setTodos] = useState([])

  function handleSubmit(e) {
    e.preventDefault()

    setTodos(currentTodos => {
      return [
        ...currentTodos,
        { id: crypto.randomUUID(), title: newItem, completed: false },
      ]
    })

    setNewItem("") // move setNewItem here
  }


  function toggleTodo(id, completed){
    setTodos(currentTodos => {
      return currentTodos.map(todo => {
        if(todo.id === id){
          return {...todo, completed} // so we want to crete a new todo as state are immutable and they cannot be changed
        }
        return todo
      })
    })
  }

  function deleteTodo(id){
    setTodos(currentTodos =>{
      return currentTodos.filter(todo => todo.id !== id)
    })
  }

  console.log(todos)

  return (
    <>
      <form onSubmit={handleSubmit} className="new-item-form">
        <div className="form-row">
          <label htmlFor="item">New Item</label>
          <input
            type="text"
            id="item"
            value={newItem}
            onChange={e => setNewItem(e.target.value)}
          />
        </div>
        <button className="btn">Add</button>
      </form>
      <h1>Todo list</h1>
      <ul className="list">
        {todos.length === 0 && "No Todos" // so this is called shortcirciting
}  
        
        {todos.map(todo => {
          return (
            <li key={todo.id}>
              <label>
                {todo.title}
                <input type="checkbox" checked={todo.completed}
                // eslint-disable-next-line no-undef
                onChange={e => toggleTodo(todo.id, e.target.checked)} />
              </label>
              <button onClick={() => deleteTodo(todo.id)} //so this calls the function when i press the todo instead of function deleting the text  itself
              className="btn btn-danger">Delete</button>
            </li>
          )
        })}
      </ul>
    </>
  )
}
// whenever we are creating component. We must put it in .jsx 